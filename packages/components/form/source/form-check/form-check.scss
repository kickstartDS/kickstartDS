@use 'sass:meta';
@use 'bourbon/core/bourbon';
@use '../input-field';
@use './form-check-vars';

.c-form-check {
  @include input-field.wrapper($width: null);
  flex-direction: column;
  align-items: flex-start;
  font: var(--c-form-check--font);
  color: var(--c-form-check--color);

  &--radio {
    --c-form-check__box--border-radius: var(
      --c-form-check_radio__box--border-radius
    );
  }

  &--checkbox {
    --c-form-check__box--border-radius: var(
      --c-form-check_checkbox__box--border-radius
    );
  }

  &__field {
    position: relative;
    display: flex;
  }

  &__input {
    @include bourbon.hide-visually;

    &:disabled ~ * {
      opacity: 0.6;
    }
  }

  &__box {
    @include bourbon.size(var(--c-form-check__box--size));
    position: relative;
    flex: 0 0 var(--c-form-check__box--size);
    border: var(--c-form-check__box--border);
    border-color: var(--c-form-check__box--border-color);
    border-radius: var(--c-form-check__box--border-radius);
    margin-top: calc(
      (
          calc(var(--ks-line-height-interface-s) * 1em) -
            var(--c-form-check__box--size)
        ) / 2
    );
    background: var(--c-form-check__box--background);
    transition: 0.2s;

    :hover > & {
      border-color: var(--c-form-check__box--border-color_hover);
    }

    :focus ~ & {
      border-color: var(--c-form-check__box--border-color_focus);
    }

    :focus-visible ~ & {
      box-shadow: var(--c-form-check__box--shadow_focus)
        var(--c-form-check__box--border-color_focus);
    }

    .focus-visible ~ & {
      box-shadow: var(--c-form-check__box--shadow_focus)
        var(--c-form-check__box--border-color_focus);
    }

    :checked ~ & {
      background: var(--c-form-check__box--background_checked);
      border-color: var(--c-form-check__box--border-color_checked);
    }

    &::after {
      position: absolute;
      content: '';
      display: block;

      [type='checkbox']:checked ~ & {
        transform: translate(-50%, -50%) rotate(45deg);
        top: calc(50% - var(--c-form-check_checkbox__checkmark--width));
        left: 50%;
        width: 0.4em;
        height: 0.7em;
        border: solid var(--c-form-check__checkmark--color);
        border-width: 0 var(--c-form-check_checkbox__checkmark--width)
          var(--c-form-check_checkbox__checkmark--width) 0;
      }

      [type='radio']:checked ~ & {
        @include bourbon.size(var(--c-form-check_radio__checkmark--size));
        transform: translate(-50%, -50%);
        top: 50%;
        left: 50%;
        background: var(--c-form-check__checkmark--color);
        border-radius: 50%;
      }
    }

    .c-form-check-group--is-invalid &,
    .c-form-check__input--is-invalid ~ & {
      --c-form-check__box--border-color: var(--ks-color-negative);
      --c-form-check__box--border-color_hover: var(--ks-color-negative);
      --c-form-check__box--border-color_checked: var(--ks-color-negative);
      --c-form-check__box--background_checked: var(--ks-color-negative);
      --c-form-check__box--border-color_focus: var(--ks-color-negative);
    }
  }

  &__label {
    margin-left: var(--c-form-check__label--margin-left);
    color: var(--c-form-check__label--color);
    font: var(--c-form-check__label--font);
  }

  &__invalid-message {
    margin: 0.25rem 0 0;
    padding: 0 0.5rem 0.125rem;
    color: var(--ks-text-color-default-inverted);
    background: var(--ks-color-negative);
    border-radius: var(--c-form-field--border-radius);
  }

  &__hint {
    margin: var(--c-form-check__hint--margin);
    color: var(--c-form-check__hint--color);
  }
}
