@use 'sass:meta';
@use '@kickstartds/core/source/core/custom-properties';
@use './container';
@use './quote-vars';

$vars: meta.module-variables(quote-vars);
@include custom-properties.styles($vars, container.$name);
@include container.wrapper;

.c-quote {
  align-items: var(--c-quote--align);

  @include container.size('≥', 640px) {
    display: flex;
  }

  &__image {
    flex-shrink: 0;
    max-width: var(--c-quote_image--max-width);
    text-align: center;
    margin-bottom: 1rem;

    @include container.size('≥', 640px) {
      margin-bottom: 0;
    }
  }

  &__content {
    flex: 1;
    position: relative;
    padding-left: var(--c-quote_content--padding-left);

    &::before {
      position: absolute;
      left: var(
        --c-quote_icon--left,
        calc(var(--c-quote_content--padding-left) / 2)
      );
      content: var(--c-quote_icon--content, '\201D');
      font-family: var(
        --c-quote_icon--font-family,
        var(--ks-font-family-display)
      );
      font-size: var(--c-quote_icon--font-size);
      line-height: 1;
      color: var(--c-quote_icon--color, var(--ks-color-primary));
      transform: var(--c-quote_icon--transform, translateX(-50%));
    }
  }

  &__text {
    font: var(--c-quote_text--font, var(--ks-font-copy-m));
    margin-bottom: var(--c-quote_text--margin-bottom, var(--ks-spacing-m));
  }

  &__source {
    font: var(--c-quote_source--font-style, normal)
      var(--c-quote_source--font-weight, var(--ks-font-weight-bold))
      var(--c-quote_source--font, var(--ks-font-interface-s));
    text-transform: var(--c-quote_source--text-transform);
  }

  &__byline {
    font: var(--c-quote_byline--font-style, normal)
      var(--c-quote_byline--font-weight, var(--ks-font-weight-bold))
      var(--c-quote_byline--font, var(--ks-font-interface-s));
    text-transform: var(--c-quote_byline--text-transform);
  }
}
