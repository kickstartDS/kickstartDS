/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run `yarn run schema` to regenerate this file.
 */

/**
 * Final number to count to
 */
export type Number = number;
export type IconIdentifier = string;
export type AriaRole = string;
export type AdditionalClass = string;
/**
 * Topic for the count-up box. Displayed before the text, in bold
 */
export type Topic = string;
/**
 * Copy text for the element
 */
export type TextContent = string;
/**
 * Toggles visibility of the link
 */
export type DisplayLink = boolean;
/**
 * Text used on button
 */
export type Label = string;
/**
 * Choose one of the styles from the list
 */
export type ButtonStyle = 'solid' | 'clear' | 'outline';
export type Inverted = boolean;
/**
 * Choose a size between small, medium and large
 */
export type ButtonSize = 'small' | 'medium' | 'large';
/**
 * Link used for button
 */
export type ButtonHref = string;
/**
 * Add additional css classes that should be applied to the button
 */
export type AdditionalClasses = string;
export type IconIdentifier1 = string;
export type AriaRole1 = string;
export type AdditionalClass1 = string;
/**
 * Display icon before the button text
 */
export type IconBeforeButton = boolean;
/**
 * Display icon after the button text
 */
export type IconAfterButton = boolean;
/**
 * Overwrite the data-component to use for rendering
 */
export type DataComponentAttribute = string;
/**
 * Add fill animation on hover
 */
export type FillAnimation = boolean;
/**
 * Add icon animation on hover
 */
export type IconAnimation = boolean;
/**
 * Select the type attribute for the button
 */
export type TypeAttribute = 'button' | 'submit' | 'reset';
/**
 * Define a value attribute for the button
 */
export type ValueAttribute = string;
/**
 * Define a name attribute for the button
 */
export type NameAttribute = string;
/**
 * Set the disabled attribute for the button
 */
export type DisabledAttribute = boolean;
/**
 * Open link in new Tab
 */
export type OpenLinkInNewTab = boolean;
/**
 * Additional css classes attached to the wrapping element
 */
export type Class = string;

/**
 * Component to to increase a number up to a final value
 */
export interface CountUpProps {
  to: Number;
  icon?: Icon;
  topic?: Topic;
  text?: TextContent;
  link?: Link;
  className?: Class;
  /**
   * See https://github.com/aFarkas/lazysizes/blob/gh-pages/README.md#data-expand-attribute
   */
  expand?: number;
  [k: string]: unknown;
}
/**
 * Icon
 */
export interface Icon {
  icon?: IconIdentifier;
  role?: AriaRole;
  className?: AdditionalClass;
  [k: string]: unknown;
}
/**
 * Component to display links and call-to-actions
 */
export interface Link {
  enabled?: DisplayLink;
  label: Label;
  variant: ButtonStyle;
  inverted?: Inverted;
  size: ButtonSize;
  href?: ButtonHref;
  className?: AdditionalClasses;
  icon?: Icon1;
  iconBefore?: IconBeforeButton;
  iconAfter?: IconAfterButton;
  dataComponent?: DataComponentAttribute;
  fillAnimation?: FillAnimation;
  iconAnimation?: IconAnimation;
  type?: TypeAttribute;
  value?: ValueAttribute;
  name?: NameAttribute;
  disabled?: DisabledAttribute;
  newTab?: OpenLinkInNewTab;
}
/**
 * Icon
 */
export interface Icon1 {
  icon?: IconIdentifier1;
  role?: AriaRole1;
  className?: AdditionalClass1;
  [k: string]: unknown;
}
