@use 'sass:math';
@use 'sass:meta';
@use '@kickstartds/core/source/core/breakpoint';
@use 'settings/global';

/// Global Padding

@mixin global-padding() {
  /* critical:start */
  padding-right: global.$padding;
  padding-left: global.$padding;
  /* critical:end */

  @include breakpoint.media('≥s') {
    /* critical:start */
    padding-right: global.$padding-s;
    padding-left: global.$padding-s;
    /* critical:end */
  }

  @include breakpoint.media('≥m') {
    /* critical:start */
    padding-right: global.$padding-m;
    padding-left: global.$padding-m;
    /* critical:end */
  }
}

@mixin global-padding-offset() {
  margin-left: global.$padding;

  @include breakpoint.media('≥s') {
    margin-left: global.$padding-s;
  }

  @include breakpoint.media('≥m') {
    margin-left: global.$padding-m;
  }
}

/// ## Global Position

@mixin global-position-right() {
  right: global.$padding;

  @include breakpoint.media('≥s') {
    right: global.$padding-s;
  }

  @include breakpoint.media('≥m') {
    right: global.$padding-m;
  }
}

@mixin global-position-left() {
  left: global.$padding;

  @include breakpoint.media('≥s') {
    left: global.$padding-s;
  }

  @include breakpoint.media('≥m') {
    left: global.$padding-m;
  }
}

/// ## Vertical padding in Sections

@mixin vertical-padding-top {
  /* critical:start */
  padding-top: global.$vertical-padding;
  /* critical:end */

  @include breakpoint.media('≥s') {
    /* critical:start */
    padding-top: global.$vertical-padding-s;
    /* critical:end */
  }

  @include breakpoint.media('≥m') {
    /* critical:start */
    padding-top: global.$vertical-padding-m;
    /* critical:end */
  }
}

@mixin vertical-padding-bottom {
  /* critical:start */
  padding-bottom: global.$vertical-padding;
  /* critical:end */

  @include breakpoint.media('≥s') {
    /* critical:start */
    padding-bottom: global.$vertical-padding-s;
    /* critical:end */
  }

  @include breakpoint.media('≥m') {
    /* critical:start */
    padding-bottom: global.$vertical-padding-m;
    /* critical:end */
  }
}

@mixin vertical-padding {
  @include vertical-padding-top;
  @include vertical-padding-bottom;
}

@mixin vertical-padding-top-small {
  // TODO: remove conditions in version 10
  padding-top: if(
    meta.global-variable-exists('vertical-padding-small', 'global'),
    global.$vertical-padding-small,
    math.div(global.$vertical-padding, 4)
  );

  @include breakpoint.media('≥s') {
    padding-top: if(
      meta.global-variable-exists('vertical-padding-small-s', 'global'),
      global.$vertical-padding-small-s,
      math.div(global.$vertical-padding-s, 3)
    );
  }

  @include breakpoint.media('≥m') {
    padding-top: if(
      meta.global-variable-exists('vertical-padding-small-m', 'global'),
      global.$vertical-padding-small-m,
      null
    );
  }
}

@mixin vertical-padding-bottom-small {
  // TODO: remove conditions in version 10
  padding-bottom: if(
    meta.global-variable-exists('vertical-padding-small', 'global'),
    global.$vertical-padding-small,
    math.div(global.$vertical-padding, 4)
  );

  @include breakpoint.media('≥s') {
    padding-bottom: if(
      meta.global-variable-exists('vertical-padding-small-s', 'global'),
      global.$vertical-padding-small-s,
      math.div(global.$vertical-padding-s, 3)
    );
  }

  @include breakpoint.media('≥m') {
    padding-bottom: if(
      meta.global-variable-exists('vertical-padding-small-m', 'global'),
      global.$vertical-padding-small-m,
      null
    );
  }
}

/// @deprecated
@mixin vertical-padding-top-none {
  padding-top: 0 !important;
}

/// @deprecated
@mixin vertical-padding-bottom-none {
  padding-bottom: 0 !important;
}
