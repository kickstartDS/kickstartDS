// stylelint-disable
@use 'sass:map';
@use 'sass:string';
@use '../core/breakpoint';
@use './tokens.css';
@use './token-map' as *;

:root {
  @each $family, $sizes in map.get($tokens, 'ks', 'font-size') {
    @each $bp in map.keys(map.get($sizes, 'bp-factor')) {
      @include breakpoint.media('≥#{$bp}') {
        --ks-font-size-#{$family}-bp-factor: var(
          --ks-font-size-#{$family}-bp-factor-#{$bp}
        );
      }
    }

    @each $base in map.keys(map.remove($sizes, 'bp-factor')) {
      $separatorIndex: string.index($base, '-');
      $size: string.slice($base, 1, $separatorIndex - 1);

      --ks-font-size-#{$family}-#{$size}: calc(
        var(--ks-font-size-#{$family}-#{$size}-base) *
          var(--ks-font-size-#{$family}-bp-factor, 1)
      );

      --ks-font-#{$family}-#{$size}: var(--ks-font-size-#{$family}-#{$size}) /
        var(--ks-line-height-#{$family}-#{$size})
        var(--ks-font-family-#{$family});
    }
  }

  @each $scale, $breakpoints in map.get($tokens, 'ks', 'spacing') {
    @each $bp in map.keys(map.get($breakpoints, 'bp')) {
      @include breakpoint.media('≥#{$bp}') {
        --ks-spacing-#{$scale}: var(--ks-spacing-#{$scale}-bp-#{$bp});
      }
    }
  }
}
