@use 'sass:meta';
@use 'bourbon/core/bourbon';
@use '../../core/breakpoint';

@function _responsive($inc, $ratio: 1.125) {
  $base: bourbon.modular-scale($inc, 0.75rem, 1.618);
  @return (
    xs: $base,
    s: bourbon.modular-scale(1, $base, $ratio),
    m: bourbon.modular-scale(2, $base, $ratio),
    xl: bourbon.modular-scale(3, $base, $ratio)
  );
}

$xxs: _responsive(-3) !default;
$xs: _responsive(-2) !default;
$s: _responsive(-1) !default;
$m: _responsive(0) !default;
$l: _responsive(1) !default;
$xl: _responsive(2) !default;
$xxl: _responsive(2, 1.333) !default;

@mixin cp($name, $value, $category: null) {
  @if meta.type-of($value) == 'map' {
    @each $bp, $val in $value {
      @if $bp == 'xs' {
        @include cp($name, $val);
      } @else {
        @include breakpoint.media('â‰¥#{$bp}') {
          @include cp($name, $val, $bp);
        }
      }
    }
  } @else {
    @if $category == 'm' {
      /*!
      * @tokens Spacing
      * @presenter Spacing
      */
    } @else {
      /*!
      * @tokens Ignore
      */
    }
    --spacing-#{$name}: #{$value};
  }
}

@mixin render($name, $value) {
  @include cp($name, $value);
}
